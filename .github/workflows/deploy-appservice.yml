name: Build & Deploy hourglow-pro to Azure App Service

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Permisos necesarios para OIDC
permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: hourglow-pro-webapp-jccr
  NODE_VERSION: "20"

concurrency:
  group: deploy-hourglow-pro
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Comprobación: que existan los secrets
      - name: Validate OIDC inputs
        run: |
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then echo "ERROR: Falta secret AZURE_CLIENT_ID"; exit 1; fi
          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then echo "ERROR: Falta secret AZURE_TENANT_ID"; exit 1; fi
          if [ -z "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ]; then echo "ERROR: Falta secret AZURE_SUBSCRIPTION_ID"; exit 1; fi
          echo "OK: secrets presentes"

      - name: Install & Build
        run: |
          npm ci
          npm run build
          npm prune --omit=dev

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -R dist server.mjs package.json package-lock.json node_modules deploy/
          cd deploy
          zip -r ../app.zip .

      # Azure login usando OIDC (auto-detectado). NO usar auth-type aquí.
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: app.zip
